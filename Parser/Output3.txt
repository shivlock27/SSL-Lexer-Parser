Parsing was successful and the level order traversal for the parse tree is generated as follows:-
Level 0 PROGRAM
Level 1 FUNCTION_LIST MAIN
Level 2 FIRST_FUNCTION MORE_FUNCTIONS main ( ) { STMTS }
Level 3 FIRST_FUNCTION_PRE FIRST_FUNCTION_POST ssc STMT_PRE STMT_POST
Level 4 TYPE id ( FORMAL_PARAMS ) { STMTS } STMT ; STMTS
Level 5 int FORMAL_PARAMS_PRE FORMAL_PARAMS_POST STMT_PRE STMT_POST TYPE id POS_3 STMT_PRE STMT_POST
Level 6 TYPE id , FORMAL_PARAMS STMT ; STMTS string = POS_4 STMT ; STMTS
Level 7 int FORMAL_PARAMS_PRE FORMAL_PARAMS_POST TYPE id POS_3 STMT_PRE STMT_POST EXPR print ( PRINT_POST STMT_PRE STMT_POST
Level 8 TYPE id , FORMAL_PARAMS int = POS_4 STMT ; STMTS TERM EXPR' id ) STMT ; STMTS
Level 9 int FORMAL_PARAMS_PRE FORMAL_PARAMS_POST EXPR id = POS_4 STMT_PRE STMT_POST FACTOR TERM' ssc TYPE id POS_3 STMT_PRE STMT_POST
Level 10 TYPE id ssc TERM EXPR' EXPR STMT ; STMTS LITERAL ssc int VARLIST_POST STMT ; STMTS
Level 11 int FACTOR TERM' ssc TERM EXPR' CONDITION_ST STMT_PRE STMT_POST string_literal ssc input ( id ) STMT_PRE STMT_POST
Level 12 LITERAL ssc FACTOR TERM' ssc if ( RELN_EXPR ) { STMTS } STMT ; STMTS STMT ; STMTS
Level 13 int_literal id % FACTOR TERM' EXPR REL_OP EXPR RELN_EXPR' STMT_PRE STMT_POST LOOP_ST STMT_PRE STMT_POST id = POS_4 STMT_PRE STMT_POST
Level 14 id ssc TERM EXPR' eq_eq_op TERM EXPR' ssc STMT ; ssc while ( RELN_EXPR ) { STMTS } STMT ; ssc EXPR STMT ; STMTS
Level 15 FACTOR TERM' ssc FACTOR TERM' ssc return RETURN_POST EXPR REL_OP EXPR RELN_EXPR' STMT_PRE STMT_POST return RETURN_POST TERM EXPR' print ( PRINT_POST STMT_PRE STMT_POST
Level 16 id ssc LITERAL ssc LITERAL TERM EXPR' greater_op TERM EXPR' ssc STMT ; STMTS id FACTOR TERM' ssc id ) STMT ; STMTS
Level 17 int_literal int_literal FACTOR TERM' ssc FACTOR TERM' ssc TYPE id POS_3 STMT_PRE STMT_POST LITERAL ssc TYPE id POS_3 STMT_PRE STMT_POST
Level 18 id ssc LITERAL ssc int = POS_4 STMT ; STMTS string_literal int VARLIST_POST STMT ; STMTS
Level 19 int_literal EXPR CONDITION_ST STMT_PRE STMT_POST ssc input ( id ) STMT_PRE STMT_POST
Level 20 TERM EXPR' if ( RELN_EXPR ) { STMTS } STMT ; STMTS STMT ; STMTS
Level 21 FACTOR TERM' ssc EXPR REL_OP EXPR RELN_EXPR' STMT_PRE STMT_POST id = POS_4 STMT_PRE STMT_POST TYPE id POS_3 STMT_PRE STMT_POST
Level 22 id % FACTOR TERM' TERM EXPR' not_eq_op TERM EXPR' ssc STMT ; ssc EXPR STMT ; ssc string = POS_4 STMT ; STMTS
Level 23 LITERAL ssc FACTOR TERM' ssc FACTOR TERM' ssc id = POS_4 TERM EXPR' id = POS_4 EXPR print ( PRINT_POST STMT_PRE STMT_POST
Level 24 int_literal id ssc LITERAL ssc EXPR FACTOR TERM' ssc EXPR TERM EXPR' id ) STMT ; STMTS
Level 25 int_literal TERM EXPR' id / FACTOR TERM' TERM EXPR' FACTOR TERM' ssc TYPE id POS_3 STMT_PRE STMT_POST
Level 26 FACTOR TERM' ssc LITERAL ssc ( EXPR ) TERM' ssc LITERAL ssc int VARLIST_POST STMT ; STMTS
Level 27 id * FACTOR TERM' int_literal TERM EXPR' % FACTOR TERM' string_literal ssc input ( id ) STMT_PRE STMT_POST
Level 28 id % FACTOR TERM' FACTOR TERM' ssc id ssc STMT ; STMTS
Level 29 id ssc id * FACTOR TERM' TYPE id POS_3 STMT_PRE STMT_POST
Level 30 id ssc float = POS_4 STMT ; ssc
Level 31 return id ( POS_5 print ( PRINT_POST
Level 32 ACTUAL_PARAMS ) id )
Level 33 ACTUAL_PARAMS_PRE ACTUAL_PARAMS_POST
Level 34 id , ACTUAL_PARAMS
Level 35 ACTUAL_PARAMS_PRE ACTUAL_PARAMS_POST
Level 36 id , ACTUAL_PARAMS
Level 37 ACTUAL_PARAMS_PRE ACTUAL_PARAMS_POST
Level 38 id ssc